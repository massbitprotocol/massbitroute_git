#!/bin/bash
TYPE="git"
SITE_ROOT=$(realpath $(dirname $(realpath $0))/..)
mkdir -p $SITE_ROOT

export HOME=$SITE_ROOT
if [ -e "$SITE_ROOT/cmd_server" ]; then bash $SITE_ROOT/cmd_server _env; fi
if [ -f "$SITE_ROOT/.env_raw" ]; then source $SITE_ROOT/.env_raw; fi

source $SITE_ROOT/scripts/base.sh

cd $SITE_ROOT

git="git -C $SITE_ROOT"
diff="diff -s"
type="git"
cmd="/massbit/massbitroute/app/src/sites/services/$type/cmd_server"
nginx="$cmd nginx"

mbr_root=/massbit/massbitroute/app
service_dir=$mbr_root/src/sites/services

export MBR_ENV=${MBR_ENV:-dev}
export BRANCH=${BRANCH:-dev}
export MBRAPP_BRANCH=${MBRAPP_BRANCH:-dev}
export ASDF_BRANCH=${ASDF_BRANCH:-dev}
export GBC_BRANCH=${GBC_BRANCH:-dev}
export SSL_BRANCH=${SSL_BRANCH:-dev}
export GWMAN_BRANCH=${GWMAN_BRANCH:-dev}
export NODE_BRANCH=${NODE_BRANCH:-dev}
export GATEWAY_BRANCH=${GATEWAY_BRANCH:-dev}
export STAT_BRANCH=${STAT_BRANCH:-dev}
export MONITOR_BRANCH=${MONITOR_BRANCH:-dev}
export API_BRANCH=${API_BRANCH:-dev}
export SESSION_BRANCH=${SESSION_BRANCH:-dev}
export GIT_BRANCH=${GIT_BRANCH:-dev}
export MKAGENT_BRANCH=${MKAGENT_BRANCH:-dev}

_repo() {
	REPOS="/etc/letsencrypt|$GIT_PRIVATE_READ_URL/massbitroute/ssl.git|master \
$mbr_root/gbc|$GIT_PUBLIC_URL/massbitprotocol/massbitroute_gbc.git \
$SITE_ROOT|$GIT_PUBLIC_URL/massbitprotocol/massbitroute_${TYPE}.git \
$service_dir/mkagent|$GIT_PUBLIC_URL/massbitprotocol/massbitroute_mkagent.git|$MBR_ENV"
}

_repo

_reload() {
	$SITE_ROOT/etc/mkagent/agents/push.sh _kill
	$cmd _update
	#	$cmd update
}
_prepare() {
	echo "Prepare"
	mkdir -p $SITE_ROOT/logs/nginx $SITE_ROOT/db $SITE_ROOT/tmp $SITE_ROOT/db
}
_init() {
	if [ -z "$GIT_PRIVATE_READ_URL" ]; then
		echo "Need GIT_PRIVATE_READ_URL"
		exit 1
	fi
	if [ ! -f "$SITE_ROOT/.env" ]; then
		echo "$MBR_ENV" >$SITE_ROOT/.env
	fi

	source $SITE_ROOT/.env

	_git_clone $GIT_PRIVATE_READ_URL/massbitroute/env.git /massbit/massbitroute/app/src/env $MBR_ENV
	_git_clone $GIT_PUBLIC_URL/massbitprotocol/massbitroute_gbc.git /massbit/massbitroute/app/gbc

	bash $SITE_ROOT/cmd_server _env
	source $SITE_ROOT/.env_raw
	_repo
}

_supervisor() {
	ln -sf /massbit/massbitroute/app/gbc /massbit/massbitroute/app/src/gbc
	ln -sf /massbit/massbitroute/app/gbc/bin/openresty /usr/local/openresty
	apt-get update
	apt-get install -y git apache2-utils supervisor jq python-is-python2 libssl-dev libmaxminddb-dev fcgiwrap

	systemctl enable supervisor
	systemctl start supervisor

	mkdir -p /etc/supervisor/conf.d
	cp supervisor.conf /etc/supervisor/conf.d/${TYPE}.conf
	supervisorctl update
}

_install_repos() {
	_git_config
	_repo
	for _pathgit in $REPOS; do
		_path=$(echo $_pathgit | cut -d'|' -f1)
		_url=$(echo $_pathgit | cut -d'|' -f2)
		_branch=$(echo $_pathgit | cut -d'|' -f3)
		_git_clone $_url $_path $_branch
	done
}
_install() {
	_init
	_prepare
	_install_repos
	_supervisor
}

loop() {
	while true; do
		timeout 60 $0 $@
		sleep 3
	done
}

_update_repos() {
	_git_config
	_repo
	_update_sources $REPOS
	_st_repo=$?
	return $_st_repo
}

_update() {
	echo "Update"

	_update_repos
	_st_update=$?

	return $_st_update

}

_monitor() {
	echo mbr-git >vars/TYPE
	_update

	is_reload=$?

	if [ $is_reload -ne 0 ]; then
		$0 _reload
	fi

}

_run() {
	rm -rf $SITE_ROOT/tmp/*
	$SITE_ROOT/start_server
}

$@
